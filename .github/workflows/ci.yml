name: CI

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: fastapi_blog_db
          POSTGRES_USER: fastapi_user
          POSTGRES_PASSWORD: fastapi_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U fastapi_user -d fastapi_blog_db"
          --health-interval=5s --health-timeout=5s --health-retries=20
          --health-timeout=5s
          --health-retries=10

    env:
      POETRY_VIRTUALENVS_CREATE: "false"
      PYTHONPATH: src
        # URL’ы для тестов
      DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi_password@localhost:5432/fastapi_blog_db
      TEST_DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi_password@localhost:5432/fastapi_blog_db_test

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install "poetry==2.1.3"

      - name: Install deps
        run: poetry install --no-interaction --no-ansi

      - name: Lint (ruff)
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      - name: Pre-commit (sanity checks)
        run: poetry run pre-commit run --all-files

      - name: Tests
        run: poetry run pytest -q
