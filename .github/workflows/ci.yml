name: CI

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: fastapi_user
          POSTGRES_PASSWORD: fastapi_password
          POSTGRES_DB: fastapi_blog_db_test
        options: >-
          --health-cmd="pg_isready -U fastapi_user -d fastapi_blog_db_test"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=12

    env:
      POETRY_VIRTUALENVS_CREATE: "true"
      POETRY_VIRTUALENVS_IN_PROJECT: "true"
      POETRY_NO_INTERACTION: "1"

      DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi_password@localhost:5432/fastapi_blog_db_test
      TEST_DATABASE_URL: postgresql+psycopg://fastapi_user:fastapi_password@localhost:5432/fastapi_blog_db_test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pipx install "poetry==2.1.3"

      - name: Install deps
        run: poetry install --no-root

      - name: Lint (ruff)
        run: |
          poetry run ruff check .
          poetry run ruff format --check .

      - name: Pre-commit (sanity checks)
        run: poetry run pre-commit run --all-files

      - name: Tests
        run: poetry run pytest -q
