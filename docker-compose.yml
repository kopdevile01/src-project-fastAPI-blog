services:
  db:
    image: postgres:17-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  minio:
    image: minio/minio:latest
    command: server /data --console-address ":9001"
    env_file: [.env]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - ./_data/minio:/data

  minio-setup:
    image: minio/mc:latest
    depends_on: [ minio ]
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${S3_BUCKET} || true &&
      mc anonymous set public local/${S3_BUCKET} || true
      "

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"
      - "8025:8025"

  worker:
    build: .
    depends_on: [ rabbitmq ]
    env_file: [.env]
    environment:
      RABBITMQ_URL: ${RABBITMQ_URL_DOCKER}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
    command: >
      poetry run celery -A src.app.celery_app.celery worker --loglevel=INFO

  backend:
    build: .
    depends_on: [ db, rabbitmq ]
    env_file: [.env]
    environment:
      DATABASE_URL: ${DATABASE_URL_DOCKER}
      RABBITMQ_URL: ${RABBITMQ_URL_DOCKER}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      S3_ENDPOINT: ${S3_ENDPOINT_DOCKER}
      S3_PUBLIC_URL: ${S3_PUBLIC_URL}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
    ports:
      - "8000:8000"
    command: >
      poetry run uvicorn src.app.main:app --host 0.0.0.0 --port 8000 --proxy-headers --forwarded-allow-ips='*'

volumes:
  db_data:
