services:
  db:
    image: postgres:17.6-alpine
    env_file: [.env]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2025-09-07T16-13-09Z
    command: server /data --console-address ":9001"
    env_file: [.env]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000", "9001:9001"]
    volumes:
      - ./_data/minio:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 5s
      timeout: 5s
      retries: 30

  minio-setup:
    image: minio/mc:RELEASE.2025-09-07T16-13-09Z
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${S3_BUCKET} || true &&
      mc anonymous set public local/${S3_BUCKET} || true
      "

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025"
      - "8025:8025"

  worker:
    build: .
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: [ .env ]
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672//
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      CELERY_CONCURRENCY: ${CELERY_CONCURRENCY:-1}
    command: >
      poetry run celery -A src.app.celery_app.celery worker
      --loglevel=INFO
      --concurrency=${CELERY_CONCURRENCY:-1}

  backend:
    build: .
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    env_file: [.env]
    environment:
      DATABASE_URL: postgresql+psycopg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672//
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      S3_ENDPOINT: http://minio:9000
      S3_PUBLIC_URL: http://localhost:9000
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      UVICORN_WORKERS: ${UVICORN_WORKERS:-2}
    ports:
      - "8000:8000"
    command: >
      sh -c "poetry run uvicorn src.app.main:app
             --host 0.0.0.0 --port 8000
             --proxy-headers --forwarded-allow-ips='*'
             --workers ${UVICORN_WORKERS}"

volumes:
  db_data:
